builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
echo hello bash > stdout.txt
ls --color=auto -l
echo hello bash >> stdout.txt
ls --color=auto -l
cat stdout.txt
echo hello bash > stdout.txt
cat stdout.txt
> stdout.txt
cat stdout.txt
bad_command
bad_command > stder.txt
bad_command > stderr.txt
rm stder.txt
stderr 2> stderr.txt
bad_command 2> stderr.txt
cat stderr.txt
echo hello bash > stdout
echo hello bash > stdout.txt
rm stdout
read NAME
echo NAME
echo $NAME
echo $NAME > stdout.txt
cat stdout.txt
echo freeCodeCamp > name.txt
git status
git push origin
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
read NAME < name.txt
cat name.txt
cat stdout.txt
echo NAME
echo $NAME
https://github.com/danila746/learn-world-cup-database/blob/main/worldcup.sqldsdscxxcxc
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
read name
echo $NAME
echo Dan
echo $NAME
cat $NAME
cat
cat name.txt
cat < name.txt
echo Dan
echo Dan
rm cat
touch script.sh
chmod +x script.sh
ls --color=auto -l
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
echo Fer
echo Fer
echo Fer
echo Fer
echo Fer
echo name.txt
echo $name.txt
cat name.txt
cat name.txt
./script.sh name.txt < cat
./script.sh < name.txt
./script.sh < name.txt
./script.sh < name.txt 2< stderr.txt
./script.sh < name.txt 2> stderr.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
./script.sh < name.txt 2> stderr.txt > stdout.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
ws kitty_ipsum_1.txt
wc kitty_ipsum_1.txt
help wc
man wc
wc -l kitty_ipsum_1.txt
wc -w kitty_ipsum_1.txt
wc -b kitty_ipsum_1.txt
wc -c kitty_ipsum_1.txt
wc -m kitty_ipsum_1.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
wc kitty_ipsum_1.txt
man wc
wc kitty_ipsum_1.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
cat kitty_ipsum_1.txt
wc kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
wc < kitty_ipsum_1.txt
echo ~~ kitty_ipsum_1.txt info ~~ > kitty_ipsum_1.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_ipsum_1.txt
echo "~~ kitty_ipsum_1.txt info ~~" < kitty_ipsum_1.txt
echo "~~ kitty_ipsum_1.txt info ~~" < kitty_ipsum.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_ipsum.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_info.txt
rm kitty_ipsum.txt
echo -e "\nNumber of lines" >> kitty_info.txt
echo -e "\nNumber of lines" >> kitty_info.txt
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_info.txt
cat kitty_info.txt
cat kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of words:" >> kitty_info.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
man wc
cat kitty_ipsum_1.txt
__vsc_prompt_cmd_original
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
grep 'meow' kitty_ipsum_1.txt
man grep
grep --color 'meow' kitty_ipsum_1.txt
grep -f 'meow' kitty_ipsum_1.txt
grep -e 'meow' kitty_ipsum_1.txt
man grep
grep -v 'meow' kitty_ipsum_1.txt
man grep
grep -c
grep -c 'meow' kitty_ipsum_1.txt
grep -n 'meow' kitty_ipsum_1.txt
grep --color -n 'meow' kitty_ipsum_1.txt
grep --color -n 'meow[a-z]' kitty_ipsum_1.txt
grep --color -n 'meow[a-z]*' kitty_ipsum_1.txt
ech -eo \n"Number of times meow or meowzer appears:" >> kitty_ipsum_1.txt
ech -eo \n"Number of times meow or meowzer appears:" >> kitty_info.txt
ech -eo \n"oNumer of times meow or meowzer appears:" >> kitty_info.txt
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
__vsc_prompt_cmd_original
grep --color -c 'meow[a-z]*' kitty_ipsum_1.txt
grep --color 'meow[a-z]*' kitty_ipsum_1.txt
grep -c 'meow[a-z]*' kitty_ipsum_1.txt
man grep
grep -m 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
grep -o 'meow[a-z]*' kitty_ipsum_1.txt
echo -e '\nLines that they appear on:'
echo -e '\nLines that they appear on:' >> kitty_info.txt
grep -c 'meow[a-z]*' >> kitty_info.txt
grep -c 'meow[a-z]*' kitty_ipsum_1.txt >> kitty_info.txt
grep -c 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man grep
__vsc_prompt_cmd_original
cat name.txt
sed 's/r>2/freeCodeCamp' name.txt
sed 's/r/2/freeCodeCamp' name.txt
sed 's/r/2/' name.txt
git add kitty_info.txt kitty_ipsum_1.txt kitty_ipsum_2.txt name.txt script.sh stderr.txt stdout.txt
git commit -m "moving forward"
git push origin
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
sed 's/f233/r' name.txt
sed 's/f233/r/' name.txt
sed 's/r/f233/' name.txt
sed 's/free/f233/' name.txt
sed 's/freecodecamp/f233C0d3C@mp/' name.txt
man sed
sed 's/freecodecamp/f233C0d3C@mp/g' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' >> name.txt
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
cat
sed 's/freecodecamp/f233C0d3C@mp/i' < name.txt
__vsc_prompt_cmd_original
cat name.txt
grep -c 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
man sed
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -e 'meow[a-z]*' kitty_ipsum_1.txt
grep -E 'meow[a-z]*' kitty_ipsum_1.txt
grep -n -E 'meow[a-z]*' kitty_ipsum_1.txt
grep -n -E 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep -n 'meow[a-z]*' kitty_ipsum_1.txt
grep - color 'cat*' kitty_ipsum_1.txt
grep --color 'cat*' kitty_ipsum_1.txt
grep --color 'cat[a-z]*' kitty_ipsum_1.txt
echo -e '\nNumber of times cat, cats, or catnip appears:' >> kitty_info.txt
grep -n 'cat[a-z]*'
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -c 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
echo -e '\nLines that they appear on:' kitty_info.txt
echo -e '\nLines that they appear on:' >> kitty_info.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -o 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
grep -n 'cat[a-z]*' kitty_ipsum_1.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo -e '\n~~ kitty_ipsum_2.txt info ~~\n' >> kitty_info.txt
echo -e '\n~~ kitty_ipsum_2.txt ~~\n' >> kitty_info.txt
echo -e '\n\n~~ kitty_ipsum_2.txt ~~' >> kitty_info.txt
echo -e '\n\n~~ kitty_ipsum_2.txt info ~~' >> kitty_info.txt
echo -e '\nNumber of lines:' >> kitty_info.txt
cat
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
echo -e '\nNumber of words:' >> kitty_info.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
man wc
cat kitty_ipsum_2.txt
cat wc -w < kitty_ipsum_2.txt >> kitty_info.txt
cat kitty_ipsum_2.txt -w < wc >> kitty_info.txt
wc -w < kitty_ipsum_2.txt >> kitty_info.txt
echo -e '\nNumber of characters:' >> kitty_info.txt
wc -c < kitty_ipsum_2.txt >> kitty_info.txt
man wc
wc -m < kitty_ipsum_2.txt >> kitty_info.txt
grep --color 'meow[a-z]*' kitty_ipsum_2.txt
echo -e '\nNumber of times meow or meowzer appears:' kitty_info.txt
echo -e '\nNumber of times meow or meowzer appears:' >> kitty_info.txt
grep 'meow[a-z]*' kitty_ipsum_2.tx
grep -o 'meow[a-z]*' kitty_ipsum_2.tx
grep -o 'meow[a-z]*' kitty_ipsum_2.txt
grep 'meow[a-z]*' kitty_ipsum_2.txt
grep 'meow[a-z]*' kitty_ipsum_2.txt
grep -o 'meow[a-z]*' kitty_ipsum_2.txt
grep -c 'meow[a-z]*' kitty_ipsum_2.txt
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
echo -e '\nLines that they appear on:' >> kitty_info.txt
__vsc_prompt_cmd_original
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
__vsc_prompt_cmd_original
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
grep -n 'meow[a-z]*' kitty_ipsum_2.txt
grep --color 'cat[a-z]*' kitty_ipsum_2.txt
git add kitty_info.txt kitty_ipsum_1.txt kitty_ipsum_2.txt name.txt script.sh stderr.txt stdout.txt
git status
git commit -m "1.02.25"
git status
git push origin
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo -e '\nNumber of times cat, cats, or catnip appears:' >> kitty_info.txt
grep -o 'cat[a-z]*' kitty_ipsum_2.txt
man wc
grep -o 'cat[a-z]*' kitty_ipsum_2.txt
grep -o 'cat[a-z]*' kitty_ipsum_2.txt
echo -e '\nLines that they appear on:' >> kitty_info.txt
grep -n 'cat[a-z]*' kitty_ipsum_2.txt
__vsc_prompt_cmd_original
grep -n 'cat[a-z]*' kitty_ipsum_2.txt
touch translate.sh
chmod +x translate.sh
'!#bin/bash' >> translate.sh
__vsc_prompt_cmd_original
./translate.sh kitty_ipsum_1.txt
./translate.sh < kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
./translate.sh
./translate.sh
./translate.sh kitty_ipsum_1.txt
grep --color 'dogchow' kitty_ipsum_1.txt
grep --color -n 'dogchow' kitty_ipsum_1.txt
grep --color -n 'meow' kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
./translate.sh kitty_ipsum_1.txt
